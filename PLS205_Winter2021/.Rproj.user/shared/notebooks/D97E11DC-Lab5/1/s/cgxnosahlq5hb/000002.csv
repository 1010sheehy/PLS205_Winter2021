"0","pls205_diagnostics = function(model_fit,EU = NULL) {"
"0","  # note: for lmer models, be sure to specify the EU that you are interested in!"
"0","  if(is(model_fit,'lm')) {"
"0","    # diagnostics for lm-type model"
"0","    eu_data = data.frame(fitted = fitted(model_fit),EU_std_resid = rstandard(model_fit))"
"0","  } else if(is(model_fit,'lmerMod')) {"
"0","    if(is.null(EU)) {"
"0","      # plot observations"
"0","      eu_data = data.frame(fitted = fitted(model_fit),EU_std_resid = resid(model_fit))"
"0","    } else {"
"0","      # plot estimated values of EU"
"0","      if(!EU %in% all.vars(formula(model_fit))) stop(sprintf('Your EU (%s) is not in the model you provided',EU))"
"0","      eu_data = data.frame(EU_obs = predict(model_fit,re.form = formula(sprintf('~(1|%s)',EU))),fitted = predict(model_fit,re.form=NA),model_fit@frame)"
"0","      eu_data = eu_data[!duplicated(eu_data[[EU]]),]"
"0","      eu_data = eu_data[order(eu_data[[EU]]),]"
"0","      ranefs = as.data.frame(ranef(model_fit,condVar=T))"
"0","      ranefs$condsd = ranefs$condsd/mean(ranefs$condsd)"
"0","      eu_data$EU_std_resid = (ranefs$condval/ranefs$condsd)[match(eu_data[[EU]],ranefs$grp)]"
"0","    }"
"0","  }"
"0","  op = par(mfrow=c(1,2))"
"0","  eu_data$sq_std_resids = sqrt(abs(eu_data$EU_std_resid))"
"0","  car::qqPlot(eu_data$EU_std_resid,main = 'Plot (EU) Normal Q-Q',pch=19,ylab = 'Observed')  # new qqplot function"
"0","  plot(eu_data$fitted,eu_data$sq_std_resids,type='n',main = 'Scale-Location',ylab = expression(sqrt(abs(' deviations '))),xlab = 'Fitted values',ylim = c(0,max(eu_data$sq_std_resids)))"
"0","  panel.smooth(eu_data$fitted,eu_data$sq_std_resids)"
"0","  par(op)"
"0","  invisible(eu_data)"
"0","}"
