DfE_correct <- 30 - DfT_correct - 1
MSE_correct <- SSE/DfE_correct
f_correct <- MST_correct/MSE_correct
f_correct
# Calculating F-value with correct values
DfE_correct <- 30 - 1 - 1
MSE_correct <- SSE/DfE_correct
f_correct <- MST/MSE_correct
f_correct
# calculating F-value with as-is table values
MST <- 5696.8
MSE <- 155.3
SSE <- 4349.7
SST <- 5696.8
f_value <- MST/MSE
f_value
# identifying errors
MSE_calc <- SSE/29     # if this doesn't match the table, the DfE is incorrect
MSE_calc
# Calculating F-value with correct values
DfT_correct <- 6-1
MST_correct <- SST/DfT_correct
DfE_correct <- 30 - DfT_correct - 1
MSE_correct <- SSE/DfE_correct
f_correct <- MST_correct/MSE_correct
f_correct
MSE_calc_correct <- SSE/DfE_correct
MSE_calc_correct
DfE_solved <- SSE/MSE
DfE_solved
trend2_means = emmeans(trend2,spec = 'Nitrogen',at=list(Nitrogen = predicted_data$Nitrogen))
trend2_means_summary = as.data.frame(summary(trend2_means,infer = c(T,F),level = 0.95))
trend2_means_summary
trend2 = lmer(Yield ~ I(Nitrogen) + I(Nitrogen^2) + (1|NitrogenF), data = alpine_potato)
SS1 <- 7721.2
SS2 <- 43.3
SSE <- SS1 + SS2
SSE
MSE <- SSE/27
DfE_alt <- 6(5-1)
DfE_alt <- 6*(5-1)
DfE_alt
DfE_correct
SS1 <- 7721.2
SS2 <- 43.3
SSE <- SS1 + SS2
SSE
MSE <- SSE/27
# back-solving
MST <- 91.3506 *MSE
MST
# calculating F-value with as-is table values
MST1 <- 5696.8
MSE1 <- 155.3
SSE1 <- 4349.7
SST1 <- 5696.8
f_value <- MST1/MSE1
f_value
# identifying errors
MSE_calc <- SSE1/29
MSE_calc
DfE_solved <- SSE1/MSE1
DfE_solved             # this is equal to 28, the correct DfE (if the DfT, 1 is assumed correct)
# Calculating F-value with correct values
DfT_correct <- 6-1
MST_correct <- SST1/DfT_correct
DfE_correct <- 30 - DfT_correct - 1
DfE_alt <- 6*(5-1)
DfE_alt
MSE_correct <- SSE1/DfE_correct
MSE_calc_correct <- SSE1/DfE_correct
MSE_calc_correct
f_correct <- MST_correct/MSE_correct
f_correct
SS1 <- 7721.2
SS2 <- 43.3
SSE2 <- SS1 + SS2
SSE2
MSE2 <- SSE2/27
# back-solving
MST2_1 <- 91.3506 *MSE2
MST2_1
SS1 <- 7721.2
SS2 <- 43.3
SSE2 <- SS1 + SS2
SSE2
MSE2 <- SSE2/27
# back-solving
MST2_1 <- 91.3506 *MSE2
MST2_1
MST2_2 <- 0.5119 * MSE2
MST2_2
# calculating F-value with as-is table values
MST1 <- 5696.8
MSE1 <- 155.3
SSE1 <- 4349.7
SST1 <- 5696.8
f_value <- MST1/MSE1
f_value
# identifying errors
MSE_calc <- SSE1/29
MSE_calc
DfE_solved <- SSE1/MSE1
DfE_solved             # this is equal to 28, the correct DfE (if the DfT, 1 is assumed correct)
# Calculating F-value with correct values
DfT_correct <- 6-1
MST_correct <- SST1/DfT_correct
DfE_correct <- 30 - DfT_correct - 1
DfE_alt <- 6*(5-1)
DfE_alt
MSE_correct <- SSE1/DfE_correct
MSE_calc_correct <- SSE1/DfE_correct
MSE_calc_correct
f_correct <- MST_correct/MSE_correct
f_correct
f_value
f_value_wrong <- MST1/MSE1
# F value with Residual DfE = 28
MSE1_partially_correct <- SSE1/28
f_partially_correct <- MST1/MSE1_partially_correct
f_partially_correct
f_value_wrong
f_partially_correct
library(ggplot2)
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
pls205_diagnostics(trend2,EU = 'NitrogenF')
# Create a new data.frame with the set of Nitrogen values we want to plot the trends
predicted_data <- data.frame(Nitrogen = seq(0,300,length=100))
trend2_means = emmeans(trend2,spec = 'Nitrogen',at=list(Nitrogen = predicted_data$Nitrogen))
trend2_means_summary = as.data.frame(summary(trend2_means,infer = c(T,F),level = 0.95))
trend2_means_summary
# first, make a base plot with boxplots of the data
base_plot = ggplot(alpine_potato,aes(x=Nitrogen)) +
geom_boxplot(aes(y=Yield,group = Nitrogen),color = 'blue',position = position_identity()) +
ggtitle('Alpine Russet') + expand_limits(y=0)
# Then, add a line for the trend and a ribbon for the confidence intervals.
# Note, here we have to specify a new data table for the plot to use
base_plot +
geom_ribbon(data = trend2_means_summary,aes(ymin = lower.CL,ymax = upper.CL),alpha = 0.2) +
geom_line(data = trend2_means_summary,aes(y = emmean),size=1.5)
27*4
# first, make a base plot with boxplots of the data
base_plot = ggplot(alpine_potato,aes(x=Nitrogen)) +
geom_boxplot(aes(y=Yield,group = Nitrogen),color = 'blue',position = position_identity()) +
ggtitle('Alpine Russet') + expand_limits(y=0)
# Then, add a line for the trend and a ribbon for the confidence intervals.
# Note, here we have to specify a new data table for the plot to use
base_plot +
geom_ribbon(data = trend2_means_summary,aes(ymin = lower.CL,ymax = upper.CL),alpha = 0.2) +
geom_line(data = trend2_means_summary,aes(y = emmean),size=1.5)
trend1 = lmer(Yield ~ I(Nitrogen) + (1|NitrogenF), data = alpine_potato)
trend1_means = emmeans(trend1,spec = 'Nitrogen',at=list(Nitrogen = predicted_data$Nitrogen))
trend1_means_summary = as.data.frame(summary(trend1_means,infer = c(T,F),level = 0.95))
base_plot + ggtitle("Degree-1") +
geom_ribbon(data = trend1_means_summary,aes(ymin = lower.CL,ymax = upper.CL),alpha = 0.2) +
geom_line(data = trend1_means_summary,aes(y = emmean),size=1.5)
trend3 = lmer(Yield ~ I(Nitrogen) + I(Nitrogen^2) + I(Nitrogen^3) + (1|NitrogenF), data = alpine_potato)
trend3_means = emmeans(trend3,spec = 'Nitrogen',at=list(Nitrogen = predicted_data$Nitrogen))
trend3_means_summary = as.data.frame(summary(trend3_means,infer = c(T,F),level = 0.95))
base_plot + ggtitle("Degree-3") +
geom_ribbon(data = trend3_means_summary,aes(ymin = lower.CL,ymax = upper.CL),alpha = 0.2) +
geom_line(data = trend3_means_summary,aes(y = emmean),size=1.5)
SS1 <- 7721.2
SS2 <- 43.3
SSE2 <- SS1 + SS2
SSE2
MSE2 <- SSE2/27
# back-solving
MST2_1 <- 91.3506 *MSE2
MST2_1
MST2_2 <- 0.5119 * MSE2
MST2_2
MSE2
F_value
F_value <- 23010.6 / 1659.2
F_value
anova(factor_model)
F_value <- 23010.6 / 1659.2
F_value
30((10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2)
30*((10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2)
30((10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2)
30*((10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2+(10-8)^2+(10-12)^2)
720/5
1200/9
# code for full model
expt2_fuller_trend <- lmer(Yield ~ I(Nitrogen) + I(Nitrogen^2) + I(Nitrogen^3) + I(Nitrogen^4) + (1|NitrogenF), data = experiment2)
# if you get an error with pls205_diagnostics, re-install the package here
# devtools::install_github('deruncie/PLS205_package')
library(ggplot2)
library(emmeans)
library(PLS205)
library(lme4)
library(lmerTest)
experiment1 = read.csv('~/Desktop/R_Projects/PLS205_Winter2021/PLS205_Winter2021/data/Experiment1.csv')
experiment1$NitrogenF = as.factor(experiment1$Nitrogen)
str(experiment1)
expt1_deg2 = lmer(Yield ~ I(Nitrogen) + I(Nitrogen^2) + (1|NitrogenF), data = experiment1)
pls205_diagnostics(expt1_deg2,EU = 'NitrogenF')
# calculate the trend at a range of values of Nitrogen:
Nitrogen_range = seq(0,320,by=1)
expt1_deg2_means = emmeans(expt1_deg2,spec = 'Nitrogen',at=list(Nitrogen = Nitrogen_range))
expt1_deg2_means_summary = as.data.frame(summary(expt1_deg2_means,infer = c(T,F),level = 0.95))
# Plot the trend and its confidence intervals:
#   Inputs:
#      - `experiment1` the data table of the raw data
#      - `expt1_deg2_means_summary` table of estimates (emmean) and confidence intervals at each value of Nitrogen_range
#      * be sure to change these variable names in the code below to plot trends for other data/models
# Make a base plot with boxplots of the data
base_plot = ggplot(experiment1,aes(x=Nitrogen)) +
geom_boxplot(aes(y=Yield,group = Nitrogen),color = 'blue',position = position_identity()) +
ggtitle('Alpine Russet') + expand_limits(y=0)
# Then, add a line for the trend and a ribbon for the confidence intervals.
# Note, here we have to specify a new data table for the plot to use
base_plot +
geom_ribbon(data = expt1_deg2_means_summary,aes(ymin = lower.CL,ymax = upper.CL),alpha = 0.2) +
geom_line(data = expt1_deg2_means_summary,aes(y = emmean),size=1.5)
experiment2 = read.csv('~/Desktop/R_Projects/PLS205_Winter2021/PLS205_Winter2021/data/Experiment2.csv',stringsAsFactors=F)
str(experiment2)
# Assigning table values to variables
DfT <- 3
SST <- 21980.4
F_val <- 4.4398
SSE <- 9901.5
# Calculating MST
MST = SST/DfT
MST
# Calculating MSE
MSE = MST/F_val
MSE
# Caclulating DfE
DfE = SSE / MSE
DfE
# Alternate DfE Calculation
# adding NitrogenF to the data
experiment2$NitrogenF <- as.factor(experiment2$Nitrogen)
# code for full model
expt2_full_trend <- lmer(Yield ~ I(Nitrogen) + I(Nitrogen^2) + I(Nitrogen^3) + (1|NitrogenF), data = experiment2)
# running the ANOVA
anova(expt2_full_trend, ddf = 'K', type='I')
# code for full model
expt2_fuller_trend <- lmer(Yield ~ I(Nitrogen) + I(Nitrogen^2) + I(Nitrogen^3) + I(Nitrogen^4) + (1|NitrogenF), data = experiment2)
# running the ANOVA
anova(expt2_fuller_trend, ddf = 'K', type='I')
SS1 <- 7721.2
SS2 <- 43.3
F1 <- 91.3506
F2 <- 0.5119
SST1 <- 7721.2
SST2 <- 43.3
F1 <- 91.3506
F2 <- 0.5119
SSE2 <- SST + SST2
MSE2_new <- SST1/F1
MSE2_new
MSE2 <- SST1/F1
MSE2
MSE2_dummy <- SST2/F2
MSE2_dummy
SSE2 <- MSE*27
SSE2
SSE2 <- MSE2*27
SSE2
![](~/Desktop/R_Projects/PLS205_Winter2021/PLS205_Winter2021/images/Strawberry_disease.jpg)
eggs_means <- emmeans(exp(eggs_log), specs = 'Variety')
detransformed_means_table = as.data.frame(eggs_means)
detransformed_means_table = as.data.frame(eggs_means)
detransformed_means_table$emmean = exp(detransformed_means_table$emmean)/(1+exp(detransformed_means_table$emmean))
detransformed_means_table$lower.CL = exp(detransformed_means_table$lower.CL)/(1+exp(detransformed_means_table$lower.CL))
detransformed_means_table$upper.CL = exp(detransformed_means_table$upper.CL)/(1+exp(detransformed_means_table$upper.CL))
detransformed_means_table
eggs_means <- emmeans(eggs_log, specs = 'Variety')
summary(contrast(eggs_means, method='trt.vs.ctrl', ref = 3), level = 0.95, infer = c(T,T))
detransformed_means_table = as.data.frame(eggs_means)
detransformed_means_table$emmean = exp(detransformed_means_table$emmean)/(1+exp(detransformed_means_table$emmean))
detransformed_means_table$lower.CL = exp(detransformed_means_table$lower.CL)/(1+exp(detransformed_means_table$lower.CL))
detransformed_means_table$upper.CL = exp(detransformed_means_table$upper.CL)/(1+exp(detransformed_means_table$upper.CL))
detransformed_means_table
summary(contrast(eggs_means, method='trt.vs.ctrl', ref = 3), level = 0.95, infer = c(T,T), type = 'response')
eggs_means <- emmeans(eggs_log, specs = 'Variety')
summary(contrast(eggs_means, method='trt.vs.ctrl', ref = 3), level = 0.95, infer = c(T,T))
summary(contrast(eggs_means, method='trt.vs.ctrl', ref = 3), level = 0.95, infer = c(T,T), type = 'response')
![](~/Desktop/R_Projects/PLS205_Winter2021/PLS205_Winter2021/images/Bacterial_lawn_01.jpg)
# checking the model assumptions
pls205_diagnostics(eggs_model, EU = 'Pot_f')
# trying transformations
# log because of the increasing slope in the scale-location plot
eggs_log <- lmer(log(eggs) ~ Variety + (1|Pot_f), data = eggs_data)
WITH_CHUNKS = TRUE
library(ggplot2)
library(emmeans)
library(lme4)
library(lmerTest)
library(multcomp)
library(PLS205)
# table as objects
s2_control <- 2.2
s2_A <- 1.2
s2_B <- 2.2
s2_C <- 1.8
strawberry_means <- c(7.8, 1, 4.2, 6.2)
s2_i <- c(2.2, 1.2, 2.2, 1.8)
n_i <- c(6,6,6,6)
# Calculating the pooled variance
s2_pooled <- ((5*s2_control) + (5*s2_A) + (5*s2_B) + (5*s2_C)) / (5*4)
s2_pooled
# checking variance assumption
#  calculating the standard deviation
s_control <- sqrt(s2_control)
s_A <- sqrt(s2_A)
variance_check <- s_control / s_A
variance_check
# Calculating t
t_critical <- qt(p = .05/2, 20, lower.tail = F)
t_critical
CI_control.vs.A_add <- (7.8 - 1) + t_critical * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
CI_control.vs.A_add
CI_control.vs.A_sub <- (7.8 - 1) - t_critical * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
CI_control.vs.A_sub
# inputting t-values
t_tukey <- 2.799
t_Dunnett <- 2.558
t_crit <- 2.086
t_bonferroni <- 2.613
# inputting means
# calculating Tukey CIs
Tukey_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_tukey * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Tukey_ctrl.vs_add
Tukey_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_tukey * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Tukey_ctrl.vs_sub
# calculating Dunnet CIs
Dunnet_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_Dunnett * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Dunnet_ctrl.vs_add
Dunnet_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_Dunnett * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Dunnet_ctrl.vs_sub
# calculating t-test CIs
ttest_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_crit * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
ttest_ctrl.vs_add
ttest_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_crit * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
ttest_ctrl.vs_sub
# calculating Bonferroni CIs
bonferroni_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_bonferroni * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
bonferroni_ctrl.vs_add
bonferroni_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_bonferroni * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
bonferroni_ctrl.vs_sub
# new pooled est. of variance and mean of A as objects
s2_pooled_new <- 1.83
mean_A <- 0.67
# Calculating t
t_critical_new <- qt(p = .05/2, 17, lower.tail = F)
t_critical_new
# Calculating the CI
CI_control.vs.A_add <- (7.8 - 0.67) + t_critical_new * sqrt(s2_pooled_new) * sqrt( 1/3 + 1/6)
CI_control.vs.A_add
CI_control.vs.A_sub <- (7.8 - 0.67) - t_critical_new * sqrt(s2_pooled_new) * sqrt( 1/3 + 1/6)
CI_control.vs.A_sub
eggs_data = read.csv('~/Desktop/R_Projects/PLS205_Winter2021/PLS205_Winter2021/data/Eggs_data.csv',stringsAsFactors = TRUE)
str(eggs_data)
# converting Pot and Leaf from numeric to factor
eggs_data$Pot_f <- as.factor(eggs_data$Pot)
eggs_data$Leaf_f <- as.factor(eggs_data$Leaf)
# fitting the model
eggs_model <- lmer(eggs ~ (1|Pot_f) + Variety, data = eggs_data)
# checking the model assumptions
pls205_diagnostics(eggs_model, EU = 'Pot_f')
# trying transformations
# log because of the increasing slope in the scale-location plot
eggs_log <- lmer(log(eggs_data$eggs1) ~ Variety + (1|Pot_f), data = eggs_data)
# trying transformations
# log because of the increasing slope in the scale-location plot
eggs_log <- lmer(log(eggs_data$eggs) ~ Variety + (1|Pot_f), data = eggs_data)
View(eggs_data)
# trying transformations
# log because of the increasing slope in the scale-location plot
eggs_log <- lmer(log(eggs) ~ Variety + (1|Pot_f), data = eggs_data)
# fitting the model
eggs_model <- lmer(eggs ~ (1|Pot_f) + Variety, data = eggs_data)
# sqrt because we are working with count data
eggs_sqrt <- lmer(sqrt(eggs) ~ Variety + (1|Pot_f), data = eggs_data)
# trying transformations
# log because of the increasing slope in the scale-location plot
eggs_data$eggs1 <- eggs_data$eggs + 1
eggs_log <- lmer(log(eggs1) ~ Variety + (1|Pot_f), data = eggs_data)
WITH_CHUNKS = TRUE
library(ggplot2)
library(emmeans)
library(lme4)
library(lmerTest)
library(multcomp)
library(PLS205)
# table as objects
s2_control <- 2.2
s2_A <- 1.2
s2_B <- 2.2
s2_C <- 1.8
strawberry_means <- c(7.8, 1, 4.2, 6.2)
s2_i <- c(2.2, 1.2, 2.2, 1.8)
n_i <- c(6,6,6,6)
# Calculating the pooled variance
s2_pooled <- ((5*s2_control) + (5*s2_A) + (5*s2_B) + (5*s2_C)) / (5*4)
s2_pooled
# checking variance assumption
#  calculating the standard deviation
s_control <- sqrt(s2_control)
s_A <- sqrt(s2_A)
variance_check <- s_control / s_A
variance_check
# Calculating t
t_critical <- qt(p = .05/2, 20, lower.tail = F)
t_critical
CI_control.vs.A_add <- (7.8 - 1) + t_critical * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
CI_control.vs.A_add
CI_control.vs.A_sub <- (7.8 - 1) - t_critical * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
CI_control.vs.A_sub
# inputting t-values
t_tukey <- 2.799
t_Dunnett <- 2.558
t_crit <- 2.086
t_bonferroni <- 2.613
# inputting means
# calculating Tukey CIs
Tukey_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_tukey * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Tukey_ctrl.vs_add
Tukey_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_tukey * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Tukey_ctrl.vs_sub
# calculating Dunnet CIs
Dunnet_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_Dunnett * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Dunnet_ctrl.vs_add
Dunnet_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_Dunnett * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
Dunnet_ctrl.vs_sub
# calculating t-test CIs
ttest_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_crit * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
ttest_ctrl.vs_add
ttest_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_crit * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
ttest_ctrl.vs_sub
# calculating Bonferroni CIs
bonferroni_ctrl.vs_add <- (7.8 - strawberry_means[2:4]) + t_bonferroni * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
bonferroni_ctrl.vs_add
bonferroni_ctrl.vs_sub <- (7.8 - strawberry_means[2:4]) - t_bonferroni * sqrt(s2_pooled) * sqrt( 1/6 + 1/6)
bonferroni_ctrl.vs_sub
# new pooled est. of variance and mean of A as objects
s2_pooled_new <- 1.83
mean_A <- 0.67
# Calculating t
t_critical_new <- qt(p = .05/2, 17, lower.tail = F)
t_critical_new
# Calculating the CI
CI_control.vs.A_add <- (7.8 - 0.67) + t_critical_new * sqrt(s2_pooled_new) * sqrt( 1/3 + 1/6)
CI_control.vs.A_add
CI_control.vs.A_sub <- (7.8 - 0.67) - t_critical_new * sqrt(s2_pooled_new) * sqrt( 1/3 + 1/6)
CI_control.vs.A_sub
eggs_data = read.csv('~/Desktop/R_Projects/PLS205_Winter2021/PLS205_Winter2021/data/Eggs_data.csv',stringsAsFactors = TRUE)
str(eggs_data)
# converting Pot and Leaf from numeric to factor
eggs_data$Pot_f <- as.factor(eggs_data$Pot)
eggs_data$Leaf_f <- as.factor(eggs_data$Leaf)
# fitting the model
eggs_model <- lmer(eggs ~ (1|Pot_f) + Variety, data = eggs_data)
# checking the model assumptions
pls205_diagnostics(eggs_model, EU = 'Pot_f')
# trying transformations
# log because of the increasing slope in the scale-location plot
eggs_data$eggs1 <- eggs_data$eggs + 1
eggs_log <- lmer(log(eggs1) ~ Variety + (1|Pot_f), data = eggs_data)
pls205_diagnostics(eggs_log, EU = 'Pot_f')
# sqrt because we are working with count data
eggs_sqrt <- lmer(sqrt(eggs) ~ Variety + (1|Pot_f), data = eggs_data)
pls205_diagnostics(eggs_sqrt, EU = 'Pot_f')
eggs_means <- emmeans(eggs_log, specs = 'Variety')
summary(contrast(eggs_means, method='trt.vs.ctrl', ref = 3), level = 0.95, infer = c(T,T), type = 'response')
# calculating F-value with as-is table values
MST1 <- 5696.8
MSE1 <- 155.3
SST1 <- 5696.8
SSE1 <- 4349.7
f_value_wrong <- MST1/MSE1
f_value_wrong
# identifying errors
MSE_calc <- SSE1/29
MSE_calc
DfE_solved <- SSE1/MSE1
DfE_solved             # this is equal to 28, the correct DfE (if the DfT, 1 is assumed correct)
# F value with Residual DfE = 28
MSE1_partially_correct <- SSE1/28
f_partially_correct <- MST1/MSE1_partially_correct
f_partially_correct
# Calculating F-value with correct values for both DfE and DfT
DfT_correct <- 6-1
MST_correct <- SST1/DfT_correct
DfE_correct <- 30 - DfT_correct - 1
DfE_alt <- 6*(5-1)
DfE_alt
MSE_correct <- SSE1/DfE_correct
MSE_calc_correct <- SSE1/DfE_correct
MSE_calc_correct
f_correct <- MST_correct/MSE_correct
f_correct
SST1 <- 7721.2
SST2 <- 43.3
F1 <- 91.3506
F2 <- 0.5119
MSE2 <- SST1/F1
MSE2
MSE2_dummy <- SST2/F2
MSE2_dummy
SSE2 <- MSE2*27
SSE2
![](~/Desktop/R_Projects/PLS205_Winter2021/PLS205_Winter2021/images/Strawberry_disease.jpg)
